{"version":3,"sources":["firebase.js","features/user/userSlice.js","components/Login.js","components/Header.js","components/Home.js","App.js","app/store.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAnalytics","getAuth","provider","GoogleAuthProvider","userSlice","createSlice","name","initialState","email","photo","reducers","setUserLoginDetails","state","action","payload","setSignOutState","actions","Container","styled","div","Nav","nav","Join","a","Signin","Section","section","Hero","Form","Google","button","Login","props","dispatch","useDispatch","href","src","alt","onClick","signInWithPopup","then","results","user","displayName","photoURL","console","log","catch","err","alert","message","Content","Logo","Search","SearchIcon","Header","type","placeholder","Home","App","exact","path","store","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAqBMA,EAAMC,YAXW,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAMXC,GADYC,YAAaV,GAClBW,eACPC,EAAW,IAAIC,I,gBCffC,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aATiB,CACjBD,KAAM,GACNE,MAAO,GACPC,MAAO,IAOPC,SAAU,CACNC,oBAAqB,SAACC,EAAMC,GACxBD,EAAMN,KAAOO,EAAOC,QAAQR,KAC5BM,EAAMJ,MAAQK,EAAOC,QAAQN,MAC7BI,EAAMH,MAAQI,EAAOC,QAAQL,OAEjCM,gBAAiB,SAAAH,GACbA,EAAMN,KAAO,KACbM,EAAMJ,MAAQ,KACdI,EAAMH,MAAQ,SAMnB,EAA+CL,EAAUY,QAAjDL,EAAR,EAAQA,oBAMAP,GANR,EAA6BW,gBAMrBX,EAAf,S,OC0BMa,EAAYC,IAAOC,IAAV,+CAKTC,EAAMF,IAAOG,IAAV,0XAqBHC,EAAOJ,IAAOK,EAAV,0UAgBJC,EAASN,IAAOK,EAAV,2bAqBNE,EAAUP,IAAOQ,QAAV,sXAoBPC,EAAOT,IAAOC,IAAV,qrBAkCJS,EAAOV,IAAOC,IAAV,uMAaJU,EAASX,IAAOY,OAAV,mjBAsBGC,EA5MD,SAACC,GAEX,IAAMC,EAAWC,cAuBjB,OACI,eAACjB,EAAD,WACI,eAACG,EAAD,WACI,mBAAGe,KAAK,IAAR,SACI,qBAAKC,IAAI,yBAAyBC,IAAI,iBAE1C,gCACI,cAACf,EAAD,uBACA,cAACE,EAAD,4BAGR,eAACC,EAAD,WACI,eAACE,EAAD,WACI,wEACA,qBAAKS,IAAI,yBAAyBC,IAAI,kBAE1C,cAACT,EAAD,UACI,eAACC,EAAD,CAAQS,QAzBL,WACfC,YAAgBxC,EAAKG,GAAUsC,MAAK,SAACC,GAdrB,IAACC,IAeDD,EAAQC,KAdxBT,EACItB,EACI,CACIL,KAAMoC,EAAKC,YACXnC,MAAOkC,EAAKlC,MACZC,MAAOiC,EAAKE,YAIxBC,QAAQC,IAAIJ,MAMTK,OAAM,SAACC,GACNC,MAAMD,EAAIE,aAqBF,UACI,qBAAKd,IAAI,uBADb,kCCpBdnB,EAAYC,IAAOC,IAAV,mPAaTgC,EAAUjC,IAAOC,IAAV,qKAUPiC,EAAOlC,IAAOC,IAAV,yEAKJkC,EAASnC,IAAOC,IAAV,mlBAyBNmC,EAAapC,IAAOC,IAAV,gRAcVC,EAAMF,IAAOG,IAAV,qOAcMkC,EA5GA,SAACvB,GACZ,OACI,cAAC,EAAD,UACI,eAACmB,EAAD,WACI,cAACC,EAAD,UACI,mBAAGjB,KAAK,QAAR,SACI,qBAAKC,IAAI,wBAAwBC,IAAI,kBAG7C,eAACgB,EAAD,WACI,8BACI,uBAAOG,KAAK,OAAOC,YAAY,aAEnC,cAACH,EAAD,UACE,qBAAKlB,IAAI,0BAA0BC,IAAI,qBAG7C,cAAC,EAAD,6BCVDqB,GAPF,SAAC1B,GACV,OACI,wCCuBO2B,OAhBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,UACE,cAAC,EAAD,IACA,cAAC,GAAD,aCjBGC,GAAQC,YAAe,CAClCC,QAAS,CACPtB,KAAMuB,KCEVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACA,cAAC,GAAD,QAGFO,SAASC,eAAe,W","file":"static/js/main.000ad25a.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { GoogleAuthProvider } from \"firebase/auth\";\r\nimport { getAuth } from \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD59Vex7RxuMF4fBfFFiDVbexE_qWIsp3g\",\r\n  authDomain: \"linkdin-clone-ce688.firebaseapp.com\",\r\n  projectId: \"linkdin-clone-ce688\",\r\n  storageBucket: \"linkdin-clone-ce688.appspot.com\",\r\n  messagingSenderId: \"82316577536\",\r\n  appId: \"1:82316577536:web:61739ba8dbcbf275b941e5\",\r\n  measurementId: \"G-NYM9BL1MSG\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nconst auth = getAuth()\r\nconst provider = new GoogleAuthProvider()\r\n\r\nexport  {auth, provider} ;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    name: \"\",\r\n    email: \"\",\r\n    photo: \"\",\r\n\r\n}\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState,\r\n    reducers: {\r\n        setUserLoginDetails: (state,action) => {\r\n            state.name = action.payload.name;\r\n            state.email = action.payload.email;\r\n            state.photo = action.payload.photo;\r\n        },\r\n        setSignOutState: state => {\r\n            state.name = null ;\r\n            state.email = null ;\r\n            state.photo = null ;\r\n        },\r\n\r\n    },\r\n});\r\n\r\nexport const { setUserLoginDetails, setSignOutState} =userSlice.actions;\r\n\r\nexport const selectUserName = state => state.user.name ;\r\nexport const selectUserEmail = state => state.user.email ;\r\nexport const selectUserPhoto = state => state.user.photo ;\r\n\r\nexport default userSlice.reducer;","import styled from \"styled-components\";\r\nimport { signInWithPopup } from \"firebase/auth\";\r\nimport { auth, provider } from \"../firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUserLoginDetails } from \"../features/user/userSlice\";\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setUserData = (user)=> {\r\n        dispatch(\r\n            setUserLoginDetails(\r\n                {\r\n                    name: user.displayName,\r\n                    email: user.email,\r\n                    photo: user.photoURL\r\n                }\r\n            )\r\n        );\r\n        console.log(user);\r\n    }\r\n\r\n    const handleAuth = ()=>{\r\n        signInWithPopup(auth,provider).then((results)=>{\r\n            setUserData(results.user);\r\n        }).catch((err)=>{\r\n            alert(err.message);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Nav>\r\n                <a href=\"/\">\r\n                    <img src='/images/login-logo.svg' alt='login-logo' />\r\n                </a> \r\n                <div>\r\n                    <Join>Join now</Join>\r\n                    <Signin>Sign In</Signin>\r\n                </div>\r\n            </Nav>\r\n            <Section>\r\n                <Hero>\r\n                    <h1>Welcome to your professional community</h1>\r\n                    <img src='/images/login-hero.svg' alt=\"login-hero\" />\r\n                </Hero>\r\n                <Form>\r\n                    <Google onClick={handleAuth}>\r\n                        <img src='/images/google.svg' />\r\n                        Sign In With Google\r\n                    </Google>\r\n                </Form>\r\n            </Section>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    padding: 0px;\r\n`;\r\n\r\n\r\nconst Nav = styled.nav`\r\n    max-width:1128px;\r\n    margin: auto;\r\n    padding: 12px 0px 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    position:relative;\r\n    justify-content: space-between;\r\n    flex-wrap: nowrap;\r\n\r\n    &> a {\r\n        width: 135px;\r\n        height: 34px;\r\n\r\n        @media (max-width: 768px) {\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nconst Join = styled.a`\r\n    font-size: 16px;\r\n    padding: 10px 12px;\r\n    text-decoration: none;\r\n    color: rbga(0,0,0,0.08);\r\n    margin-right: 12px;\r\n    border-radius: 4px;\r\n    &:hover{\r\n        background-color: rgba(0,0,0,0.08);\r\n        color: rgba(0,0,0,0.9);\r\n        text-decoration: none;\r\n        \r\n    }\r\n    \r\n`;\r\n\r\nconst Signin = styled.a`\r\n    box-shadow: inset 0 0 0 1px #0a66c2;\r\n    color: #0a66c2;\r\n    border-radius: 23px;\r\n    transition-duration: 167ms;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 40px;\r\n    padding: 10px 24px;\r\n    text-align: center;\r\n    background-color: rgba(0,0,0,0);\r\n\r\n    &:hover{\r\n        background-color: rgba(112,181,249,0.15); \r\n        color: #0a66c2;\r\n        text-decoration: none;\r\n    }\r\n\r\n\r\n`;\r\n\r\nconst Section = styled.section`\r\n    display: flex;\r\n    align-content: start;\r\n    min-height: 700px;\r\n    padding-bottom: 138px;\r\n    padding-top: 40px;\r\n    padding: 60px 0;\r\n    position: relative;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    max-width: 1128px;\r\n    margin: auto;\r\n\r\n    @media(max-height: 768px) {\r\n        margin: auto;\r\n        min-height: 0px;\r\n\r\n    }\r\n`;\r\n\r\nconst Hero = styled.div`\r\n    width: 100%;\r\n    h1{\r\n        padding-bottom: 0;\r\n        width: 55%;\r\n        font-size: 56px;\r\n        color: #2977c9;\r\n        font-weight: 200;\r\n        line-height: 70px;\r\n\r\n        @media (max-width: 768px){\r\n            text-align: center;\r\n            font-size: 20px;\r\n            width: 100%;\r\n            line-height: 2;\r\n        }\r\n    }\r\n\r\n    img {\r\n        width: 750px;\r\n        height: 670px;\r\n        position: absolute;\r\n        bottom: -2px;\r\n        right: -150px;\r\n\r\n        @media (max-width: 768px) {\r\n            top: 230px;\r\n            width: initial;\r\n            position: initial;\r\n            height: initial;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Form = styled.div`\r\n    margin-top: 100px;\r\n    width: 408px;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (max-width:768px) {\r\n        margin-top: 20px;\r\n\r\n    }\r\n\r\n`;\r\n\r\nconst Google = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    background-color: #fff;\r\n    align-items: center;\r\n    height: 56px;\r\n    width: 100% ;\r\n    border-radius: 28px; \r\n    box-shadow: inset 0 0 0 1px rgb(0 0 0 / 60%),\r\n    inset 0 0 0 2px rgb(0 0 0 / 0%) inset 0 0 0 1px rgb(0 0 0 / 0);\r\n    vertical-align: middle;\r\n    z-index: 0;\r\n    transition-duration: 167ms;\r\n    font-size: 20px;\r\n    color: rgb(0 ,0 ,0 ,0.6);\r\n\r\n    &:hover {\r\n        background-color: rgba(207,207,207,0.25);\r\n        color: rgb(0 ,0 ,0 ,0.75);\r\n\r\n    }\r\n`;\r\nexport default Login;","import styled from \"styled-components\";\r\n\r\nconst Header = (props)=> {\r\n    return (\r\n        <Container>\r\n            <Content>\r\n                <Logo>\r\n                    <a href=\"/home\">\r\n                        <img src=\"/images/home-logo.svg\" alt='home-logo' />\r\n                    </a>\r\n                </Logo>\r\n                <Search>\r\n                    <div>\r\n                        <input type='text' placeholder='Search' />\r\n                    </div>\r\n                    <SearchIcon>\r\n                      <img src='/images/search-icon.svg' alt='Search-Icon' />\r\n                    </SearchIcon>\r\n                </Search>\r\n                <Nav>\r\n                    Nav Menu\r\n                </Nav>\r\n            </Content>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Container = styled.div`\r\n    background-color: white;\r\n    border-bottom: 1px solid rgba(0,0,0,0.08);\r\n    left: 0;\r\n    padding: 0 24px;\r\n    position: fixed;\r\n    top : 0;\r\n    width: 100vw;\r\n    z-index: 100;\r\n    overflow-x: hidden;\r\n\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n    min-height: 100%;\r\n    max-width: 1128px;\r\n    padding: 5px 0;\r\n\r\n`;\r\n\r\nconst Logo = styled.div`\r\n    margin-right: 8px;\r\n    font-size: 0px;\r\n`;\r\n\r\nconst Search = styled.div`\r\n    opacity: 1;\r\n    flex-grow: 1;\r\n    position: relative;\r\n    &> div {\r\n        max-width: 280px;\r\n        input {\r\n            border: none;\r\n            box-shadow: none;\r\n            background-color: #eef3f8;\r\n            border-radius: 2px;\r\n            color: rgba(0,0,0,0.9);\r\n            width: 218px;\r\n            padding: 0 8px 0px 40px;\r\n            line-height: 1.75;\r\n            font-weight: 400;\r\n            font-size: 14px;\r\n            height: 34px;\r\n            border-color: #dce6f1;\r\n            vertical-align: text-top;\r\n\r\n        }\r\n    }\r\n`;\r\n\r\nconst SearchIcon = styled.div`\r\n    width: 40px;\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: 10px;\r\n    left: 2px;\r\n    border-radius: 0 2px 2px 0;\r\n    margin: 0;\r\n    pointer-events: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n    margin-left: auto;\r\n    display: block;\r\n\r\n    @media (max-width: 768px) {\r\n        position: fixed;\r\n        left: 0;\r\n        bottom: 0;\r\n        background: white;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nconst Home = (props) =>{\r\n    return(\r\n        <div>HOME</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Login from './components/Login';\nimport Header from './components/Header';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" >\n          <Login />\n        </Route>\n        <Route exact path=\"/home\">\n          <Header />\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from \"../features/user/userSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}